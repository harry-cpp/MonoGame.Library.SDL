
name: Build

on: [push, pull_request]

jobs:
  build:
    name: build-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-20.04]
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up MSYS2
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkg-config
      - name: Restore dotnet tools
        run: dotnet tool restore
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run:   |
              sudo apt-get install build-essential git make cmake autoconf automake \
                libtool pkg-config libasound2-dev libpulse-dev libaudio-dev libjack-dev \
                libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev \
                libxinerama-dev libxxf86vm-dev libxss-dev libgl1-mesa-dev libdbus-1-dev \
                libudev-dev libgles2-mesa-dev libegl1-mesa-dev libibus-1.0-dev \
                fcitx-libs-dev libsamplerate0-dev libsndio-dev libwayland-dev \
                libxkbcommon-dev libdrm-dev libgbm-dev
        shell: bash
      - name: Run CAKE
        run: dotnet cake
      - name: Package artifacts
        uses: actions/upload-artifact@main
        with:
          name: SDL-${{ matrix.os }}
          path: |
            artifacts/*